@using MVCApplication.Common
@using MVCApplication.Controllers.Helpers
@model PresentationService.Models.AdminModels.ProductModels.ProductEditModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section head
{
    <script src="@Url.Content("~/Content/fileuploader/fileuploader.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/galleria/galleria-1.2.7.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/ckeditor/ckeditor.js")" type="text/javascript" ></script>
    <link href="@Url.Content("~/Content/fileuploader/fileuploader.css")" type="text/css" rel="stylesheet" />
    
    <style type="text/css">
        #galleria {
            height: 450px;
        }
    </style>
    
    <script type="text/javascript">
    
        var isGaleriaInitialized = false;

        function addToHiddenGuids(filename) {
            var hiddenField = $("input#FileNames");
            hiddenField.val(filename + ',' + hiddenField.val());
        }

        function addImageToGalleriaDiv(image, thumb, title) {
            $("div#galleria").html(
                    '<a href="' +
                    image +
                    '"><img src="' +
                    thumb + '" data-title="' + title +'"/></a>');
        }

        function addNewImage(id, filename, responseJson) {
            if (!isGaleriaInitialized) {
                addImageToGalleriaDiv(responseJson.image, responseJson.thumb, responseJson.filename);
                addToHiddenGuids(responseJson.filename);
                initGaleria();
                return;
            }
            addToHiddenGuids(responseJson.filename);
            Galleria.get(0).push({
                image: responseJson.image,
                thumb: responseJson.thumb,
                title: responseJson.filename
            });
        }
    
        function createUploader() {
            var uploader = new qq.FileUploader({
                element: document.getElementById('file-uploader'),
                action: '@Url.Action("UploadImage", "Product")',
                onComplete: addNewImage
            });
        }
    
        function initGaleria() {
            $('#galleria').galleria({
                extend: function () {
                    var gallery = this;

                    var delFromHiddenGuids = function(filename) {
                        var hiddenField = $("input#FileNames");
                        if(filename !== "") {
                            hiddenField.val(hiddenField.val().toString().replace(filename + ',', ""));
                        }
                    };

                    var onDelSuccess = function (data, textStatus, jqXHR) {
                        if (data.success === true) {
                            var delIndex = gallery.getIndex();
                            gallery.splice(delIndex, 1);

                            var filename = gallery.getData().title;
                            delFromHiddenGuids(filename);
                        
                            gallery.next();
                        }
                    };

                    var delFunc = function () {
                        var curData = gallery.getData();
                        $.post(
                            '@Url.Action("DeleteImage", "Product")',
                            { fileName: curData.title },
                            onDelSuccess);
                    };

                    this.addElement('button').appendChild('container', 'button');

                    this.$('button').text('Delete').click(delFunc);
                }
            });
            Galleria.loadTheme('@Url.Content("~/Content/galleria/themes/classic/galleria.classic.min.js")');
            Galleria.run('#galleria');

            isGaleriaInitialized = true;
        }

        $(function () {
            createUploader();

            @if (Model.HasImages)
            {
                @:initGaleria();
            }
        });
    </script>
}




<div>
    @{Html.BeginForm(Model.ProductId == default(long) ? "Add" : "Edit", "Product");}
    <div>
        <div>@Html.LabelFor(m => m.ProductName)</div>
        @Html.TextBoxFor(m => m.ProductName)
        @Html.ValidationMessageFor(m => m.ProductName)
    </div>

    <div>
        <div>@Html.LabelFor(m => m.CategoryId)</div>
        @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.AvailableCategories, "CategoryId", "CategoryName"), "Выбирете одно")
        @Html.ValidationMessageFor(m => m.CategoryId)
    </div>

    <div>
        <div>@Html.LabelFor(m => m.ProductDescription)</div>
        @Html.TextAreaFor(m => m.ProductDescription, new { @class = "ckeditor"})
        @Html.ValidationMessageFor(m => m.ProductDescription)
    </div>

    <div>
        <div>@Html.LabelFor(m => m.ProductPrice)</div>
        @Html.EditorFor(m => m.ProductPrice)
        @Html.ValidationMessageFor(m => m.ProductPrice)
    </div>

    <div>
        <input type="submit" value="Подтвердить"/>
    </div>

    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.FileNames)

    @{Html.EndForm();}

</div>
<br/>

<h2>Изображения продукта</h2>
<div id="file-uploader">
    <noscript>
        <p>
            Please, enable javascript to use file uploader.
        </p>
    </noscript>
</div>

<div id="galleria">
    @{
        if (Model.ProductImages != null)
        {
            foreach (var image in Model.ProductImages)
            {
                <a href="@Url.Content(Html.ProductImage(image, ImageSize.Big))">
                    <img src="@Url.Content(Html.ProductImage(image, ImageSize.Small))"
                     data-title = "@image"
                     alt=""/>
                </a>
            }
        }

        if (Model.ProductTempImages != null)
        {
            foreach (var image in Model.ProductTempImages)
            {
                <a href="@Url.Content(Html.ProductTempImage(image, ImageSize.Big))">
                    <img src="@Url.Content(Html.ProductTempImage(image, ImageSize.Small))"
                     data-title = "@image"
                     alt=""/>
                </a>
            }
        }
    }
</div>