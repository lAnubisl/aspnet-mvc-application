@model PresentationService.Models.AdminModels.ProductModels.ProductEditModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Head
{
    <script type="text/javascript">
        
        var win;
        setNewImage = function (imageUrl) {
            win.close();
            $('#FileNames').val(imageUrl);
        };
        function OpenFileUploadPopUp() {
            win = $.Popup('frameDialog', { url: "@Url.Action("UploadImage")", title: "Загрузка изображения", width: 400, height: 300 });
        }
    </script>
}

@{Html.BeginForm(Model.ProductId == default(long) ? "Add" : "Edit", "Product");}
<div>
    <div>@Html.LabelFor(m => m.ProductName)</div>
    @Html.TextBoxFor(m => m.ProductName)
    @Html.ValidationMessageFor(m => m.ProductName)
</div>

<div>
    <div>@Html.LabelFor(m => m.CategoryId)</div>
    @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.AvailableCategories, "CategoryId", "CategoryName"), "Выбирете одно")
    @Html.ValidationMessageFor(m => m.CategoryId)
</div>

<div>
    <div>@Html.LabelFor(m => m.ProductDescription)</div>
    @Html.TextAreaFor(m => m.ProductDescription, new { @class = "ckeditor" })
    @Html.ValidationMessageFor(m => m.ProductDescription)
</div>

<div>
    <div>@Html.LabelFor(m => m.ProductPrice)</div>
    @Html.EditorFor(m => m.ProductPrice)
    @Html.ValidationMessageFor(m => m.ProductPrice)
</div>

<div>
    <div>@Html.LabelFor(m => m.IsUnlimitedProduct)</div>
    @Html.CheckBoxFor(m => m.IsUnlimitedProduct)
</div>

<div>
    <a href="#" onclick="OpenFileUploadPopUp();" class="button medium grey left-aligned">Добавить изображение</a>
    <a href="#" onclick="$('form').submit();" class="button medium grey">Сохранить</a>
</div>

@Html.HiddenFor(m => m.ProductId)
@Html.HiddenFor(m => m.FileNames)

@{Html.EndForm();}